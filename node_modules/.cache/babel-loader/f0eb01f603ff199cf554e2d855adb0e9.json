{"ast":null,"code":"/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { StaleWhileRevalidate } from 'workbox-strategies/StaleWhileRevalidate.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [CSS and JavaScript files recipe]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#cache_css_and_javascript_files}\n *\n * @memberof workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to static-resources\n * @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.destination === 'style' || request.destination === 'script' || request.destination === 'worker';\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\n\nfunction staticResourceCache() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const defaultMatchCallback = _ref => {\n    let {\n      request\n    } = _ref;\n    return request.destination === 'style' || request.destination === 'script' || request.destination === 'worker';\n  };\n\n  const cacheName = options.cacheName || 'static-resources';\n  const matchCallback = options.matchCallback || defaultMatchCallback;\n  const plugins = options.plugins || [];\n  plugins.push(new CacheableResponsePlugin({\n    statuses: [0, 200]\n  }));\n  const strategy = new StaleWhileRevalidate({\n    cacheName,\n    plugins\n  });\n  registerRoute(matchCallback, strategy); // Warms the cache\n\n  if (options.warmCache) {\n    warmStrategyCache({\n      urls: options.warmCache,\n      strategy\n    });\n  }\n}\n\nexport { staticResourceCache };","map":{"version":3,"names":["warmStrategyCache","registerRoute","StaleWhileRevalidate","CacheableResponsePlugin","staticResourceCache","options","defaultMatchCallback","request","destination","cacheName","matchCallback","plugins","push","statuses","strategy","warmCache","urls"],"sources":["C:/Users/Papichulo/Desktop/react-work/node_modules/workbox-recipes/staticResourceCache.js"],"sourcesContent":["/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { StaleWhileRevalidate } from 'workbox-strategies/StaleWhileRevalidate.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [CSS and JavaScript files recipe]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#cache_css_and_javascript_files}\n *\n * @memberof workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to static-resources\n * @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.destination === 'style' || request.destination === 'script' || request.destination === 'worker';\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\nfunction staticResourceCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.destination === 'style' ||\n        request.destination === 'script' ||\n        request.destination === 'worker';\n    const cacheName = options.cacheName || 'static-resources';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const plugins = options.plugins || [];\n    plugins.push(new CacheableResponsePlugin({\n        statuses: [0, 200],\n    }));\n    const strategy = new StaleWhileRevalidate({\n        cacheName,\n        plugins,\n    });\n    registerRoute(matchCallback, strategy);\n    // Warms the cache\n    if (options.warmCache) {\n        warmStrategyCache({ urls: options.warmCache, strategy });\n    }\n}\nexport { staticResourceCache };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,iBAAT,QAAkC,qBAAlC;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,SAASC,oBAAT,QAAqC,4CAArC;AACA,SAASC,uBAAT,QAAwC,uDAAxC;AACA,OAAO,eAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,mBAAT,GAA2C;EAAA,IAAdC,OAAc,uEAAJ,EAAI;;EACvC,MAAMC,oBAAoB,GAAG;IAAA,IAAC;MAAEC;IAAF,CAAD;IAAA,OAAiBA,OAAO,CAACC,WAAR,KAAwB,OAAxB,IAC1CD,OAAO,CAACC,WAAR,KAAwB,QADkB,IAE1CD,OAAO,CAACC,WAAR,KAAwB,QAFC;EAAA,CAA7B;;EAGA,MAAMC,SAAS,GAAGJ,OAAO,CAACI,SAAR,IAAqB,kBAAvC;EACA,MAAMC,aAAa,GAAGL,OAAO,CAACK,aAAR,IAAyBJ,oBAA/C;EACA,MAAMK,OAAO,GAAGN,OAAO,CAACM,OAAR,IAAmB,EAAnC;EACAA,OAAO,CAACC,IAAR,CAAa,IAAIT,uBAAJ,CAA4B;IACrCU,QAAQ,EAAE,CAAC,CAAD,EAAI,GAAJ;EAD2B,CAA5B,CAAb;EAGA,MAAMC,QAAQ,GAAG,IAAIZ,oBAAJ,CAAyB;IACtCO,SADsC;IAEtCE;EAFsC,CAAzB,CAAjB;EAIAV,aAAa,CAACS,aAAD,EAAgBI,QAAhB,CAAb,CAduC,CAevC;;EACA,IAAIT,OAAO,CAACU,SAAZ,EAAuB;IACnBf,iBAAiB,CAAC;MAAEgB,IAAI,EAAEX,OAAO,CAACU,SAAhB;MAA2BD;IAA3B,CAAD,CAAjB;EACH;AACJ;;AACD,SAASV,mBAAT"},"metadata":{},"sourceType":"module"}