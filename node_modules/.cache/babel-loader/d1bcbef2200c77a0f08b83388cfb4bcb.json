{"ast":null,"code":"/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { CacheFirst } from 'workbox-strategies/CacheFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport { ExpirationPlugin } from 'workbox-expiration/ExpirationPlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [image caching recipe]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#caching_images}\n *\n * @memberof workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to images\n * @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.destination === 'image';\n * @param {number} [options.maxAgeSeconds] Maximum age, in seconds, that font entries will be cached for. Defaults to 30 days\n * @param {number} [options.maxEntries] Maximum number of images that will be cached. Defaults to 60\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\n\nfunction imageCache() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const defaultMatchCallback = _ref => {\n    let {\n      request\n    } = _ref;\n    return request.destination === 'image';\n  };\n\n  const cacheName = options.cacheName || 'images';\n  const matchCallback = options.matchCallback || defaultMatchCallback;\n  const maxAgeSeconds = options.maxAgeSeconds || 30 * 24 * 60 * 60;\n  const maxEntries = options.maxEntries || 60;\n  const plugins = options.plugins || [];\n  plugins.push(new CacheableResponsePlugin({\n    statuses: [0, 200]\n  }));\n  plugins.push(new ExpirationPlugin({\n    maxEntries,\n    maxAgeSeconds\n  }));\n  const strategy = new CacheFirst({\n    cacheName,\n    plugins\n  });\n  registerRoute(matchCallback, strategy); // Warms the cache\n\n  if (options.warmCache) {\n    warmStrategyCache({\n      urls: options.warmCache,\n      strategy\n    });\n  }\n}\n\nexport { imageCache };","map":{"version":3,"names":["warmStrategyCache","registerRoute","CacheFirst","CacheableResponsePlugin","ExpirationPlugin","imageCache","options","defaultMatchCallback","request","destination","cacheName","matchCallback","maxAgeSeconds","maxEntries","plugins","push","statuses","strategy","warmCache","urls"],"sources":["C:/Users/Papichulo/Desktop/react-work/node_modules/workbox-recipes/imageCache.js"],"sourcesContent":["/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { CacheFirst } from 'workbox-strategies/CacheFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport { ExpirationPlugin } from 'workbox-expiration/ExpirationPlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [image caching recipe]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#caching_images}\n *\n * @memberof workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to images\n * @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.destination === 'image';\n * @param {number} [options.maxAgeSeconds] Maximum age, in seconds, that font entries will be cached for. Defaults to 30 days\n * @param {number} [options.maxEntries] Maximum number of images that will be cached. Defaults to 60\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\nfunction imageCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.destination === 'image';\n    const cacheName = options.cacheName || 'images';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const maxAgeSeconds = options.maxAgeSeconds || 30 * 24 * 60 * 60;\n    const maxEntries = options.maxEntries || 60;\n    const plugins = options.plugins || [];\n    plugins.push(new CacheableResponsePlugin({\n        statuses: [0, 200],\n    }));\n    plugins.push(new ExpirationPlugin({\n        maxEntries,\n        maxAgeSeconds,\n    }));\n    const strategy = new CacheFirst({\n        cacheName,\n        plugins,\n    });\n    registerRoute(matchCallback, strategy);\n    // Warms the cache\n    if (options.warmCache) {\n        warmStrategyCache({ urls: options.warmCache, strategy });\n    }\n}\nexport { imageCache };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,iBAAT,QAAkC,qBAAlC;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,uBAAT,QAAwC,uDAAxC;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AACA,OAAO,eAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,GAAkC;EAAA,IAAdC,OAAc,uEAAJ,EAAI;;EAC9B,MAAMC,oBAAoB,GAAG;IAAA,IAAC;MAAEC;IAAF,CAAD;IAAA,OAAiBA,OAAO,CAACC,WAAR,KAAwB,OAAzC;EAAA,CAA7B;;EACA,MAAMC,SAAS,GAAGJ,OAAO,CAACI,SAAR,IAAqB,QAAvC;EACA,MAAMC,aAAa,GAAGL,OAAO,CAACK,aAAR,IAAyBJ,oBAA/C;EACA,MAAMK,aAAa,GAAGN,OAAO,CAACM,aAAR,IAAyB,KAAK,EAAL,GAAU,EAAV,GAAe,EAA9D;EACA,MAAMC,UAAU,GAAGP,OAAO,CAACO,UAAR,IAAsB,EAAzC;EACA,MAAMC,OAAO,GAAGR,OAAO,CAACQ,OAAR,IAAmB,EAAnC;EACAA,OAAO,CAACC,IAAR,CAAa,IAAIZ,uBAAJ,CAA4B;IACrCa,QAAQ,EAAE,CAAC,CAAD,EAAI,GAAJ;EAD2B,CAA5B,CAAb;EAGAF,OAAO,CAACC,IAAR,CAAa,IAAIX,gBAAJ,CAAqB;IAC9BS,UAD8B;IAE9BD;EAF8B,CAArB,CAAb;EAIA,MAAMK,QAAQ,GAAG,IAAIf,UAAJ,CAAe;IAC5BQ,SAD4B;IAE5BI;EAF4B,CAAf,CAAjB;EAIAb,aAAa,CAACU,aAAD,EAAgBM,QAAhB,CAAb,CAlB8B,CAmB9B;;EACA,IAAIX,OAAO,CAACY,SAAZ,EAAuB;IACnBlB,iBAAiB,CAAC;MAAEmB,IAAI,EAAEb,OAAO,CAACY,SAAhB;MAA2BD;IAA3B,CAAD,CAAjB;EACH;AACJ;;AACD,SAASZ,UAAT"},"metadata":{},"sourceType":"module"}