{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/**\n * Dependency for static evaluating import specifier. e.g.\n * @example\n * import a from \"a\";\n * \"x\" in a;\n * a.x !== undefined; // if x value statically analyzable\n */\n\n\nclass HarmonyEvaluatedImportSpecifierDependency extends HarmonyImportSpecifierDependency {\n  constructor(request, sourceOrder, ids, name, range, assertions, operator) {\n    super(request, sourceOrder, ids, name, range, false, assertions);\n    this.operator = operator;\n  }\n\n  get type() {\n    return `evaluated X ${this.operator} harmony import specifier`;\n  }\n\n  serialize(context) {\n    super.serialize(context);\n    const {\n      write\n    } = context;\n    write(this.operator);\n  }\n\n  deserialize(context) {\n    super.deserialize(context);\n    const {\n      read\n    } = context;\n    this.operator = read();\n  }\n\n}\n\nmakeSerializable(HarmonyEvaluatedImportSpecifierDependency, \"webpack/lib/dependencies/HarmonyEvaluatedImportSpecifierDependency\");\nHarmonyEvaluatedImportSpecifierDependency.Template = class HarmonyEvaluatedImportSpecifierDependencyTemplate extends HarmonyImportSpecifierDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {\n    const dep =\n    /** @type {HarmonyEvaluatedImportSpecifierDependency} */\n    dependency;\n    const {\n      moduleGraph,\n      runtime\n    } = templateContext;\n    const connection = moduleGraph.getConnection(dep); // Skip rendering depending when dependency is conditional\n\n    if (connection && !connection.isTargetActive(runtime)) return;\n    const exportsInfo = moduleGraph.getExportsInfo(connection.module);\n    const ids = dep.getIds(moduleGraph);\n    const value = exportsInfo.isExportProvided(ids);\n\n    if (typeof value === \"boolean\") {\n      source.replace(dep.range[0], dep.range[1] - 1, `${value}`);\n    } else {\n      const usedName = exportsInfo.getUsedName(ids, runtime);\n\n      const code = this._getCodeForIds(dep, source, templateContext, ids.slice(0, -1));\n\n      source.replace(dep.range[0], dep.range[1] - 1, `${usedName ? JSON.stringify(usedName[usedName.length - 1]) : '\"\"'} in ${code}`);\n    }\n  }\n\n};\nmodule.exports = HarmonyEvaluatedImportSpecifierDependency;","map":{"version":3,"names":["makeSerializable","require","HarmonyImportSpecifierDependency","HarmonyEvaluatedImportSpecifierDependency","constructor","request","sourceOrder","ids","name","range","assertions","operator","type","serialize","context","write","deserialize","read","Template","HarmonyEvaluatedImportSpecifierDependencyTemplate","apply","dependency","source","templateContext","dep","moduleGraph","runtime","connection","getConnection","isTargetActive","exportsInfo","getExportsInfo","module","getIds","value","isExportProvided","replace","usedName","getUsedName","code","_getCodeForIds","slice","JSON","stringify","length","exports"],"sources":["C:/Users/Papichulo/Desktop/react-work/node_modules/webpack/lib/dependencies/HarmonyEvaluatedImportSpecifierDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/**\n * Dependency for static evaluating import specifier. e.g.\n * @example\n * import a from \"a\";\n * \"x\" in a;\n * a.x !== undefined; // if x value statically analyzable\n */\nclass HarmonyEvaluatedImportSpecifierDependency extends HarmonyImportSpecifierDependency {\n\tconstructor(request, sourceOrder, ids, name, range, assertions, operator) {\n\t\tsuper(request, sourceOrder, ids, name, range, false, assertions);\n\t\tthis.operator = operator;\n\t}\n\n\tget type() {\n\t\treturn `evaluated X ${this.operator} harmony import specifier`;\n\t}\n\n\tserialize(context) {\n\t\tsuper.serialize(context);\n\t\tconst { write } = context;\n\t\twrite(this.operator);\n\t}\n\n\tdeserialize(context) {\n\t\tsuper.deserialize(context);\n\t\tconst { read } = context;\n\t\tthis.operator = read();\n\t}\n}\n\nmakeSerializable(\n\tHarmonyEvaluatedImportSpecifierDependency,\n\t\"webpack/lib/dependencies/HarmonyEvaluatedImportSpecifierDependency\"\n);\n\nHarmonyEvaluatedImportSpecifierDependency.Template = class HarmonyEvaluatedImportSpecifierDependencyTemplate extends (\n\tHarmonyImportSpecifierDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst dep = /** @type {HarmonyEvaluatedImportSpecifierDependency} */ (\n\t\t\tdependency\n\t\t);\n\t\tconst { moduleGraph, runtime } = templateContext;\n\t\tconst connection = moduleGraph.getConnection(dep);\n\t\t// Skip rendering depending when dependency is conditional\n\t\tif (connection && !connection.isTargetActive(runtime)) return;\n\n\t\tconst exportsInfo = moduleGraph.getExportsInfo(connection.module);\n\t\tconst ids = dep.getIds(moduleGraph);\n\t\tconst value = exportsInfo.isExportProvided(ids);\n\n\t\tif (typeof value === \"boolean\") {\n\t\t\tsource.replace(dep.range[0], dep.range[1] - 1, `${value}`);\n\t\t} else {\n\t\t\tconst usedName = exportsInfo.getUsedName(ids, runtime);\n\n\t\t\tconst code = this._getCodeForIds(\n\t\t\t\tdep,\n\t\t\t\tsource,\n\t\t\t\ttemplateContext,\n\t\t\t\tids.slice(0, -1)\n\t\t\t);\n\t\t\tsource.replace(\n\t\t\t\tdep.range[0],\n\t\t\t\tdep.range[1] - 1,\n\t\t\t\t`${\n\t\t\t\t\tusedName ? JSON.stringify(usedName[usedName.length - 1]) : '\"\"'\n\t\t\t\t} in ${code}`\n\t\t\t);\n\t\t}\n\t}\n};\n\nmodule.exports = HarmonyEvaluatedImportSpecifierDependency;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}