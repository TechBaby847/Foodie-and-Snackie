{"ast":null,"code":"/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { setCatchHandler } from 'workbox-routing/setCatchHandler.js';\nimport { matchPrecache } from 'workbox-precaching/matchPrecache.js';\nimport './_version.js';\n/**\n * An implementation of the [comprehensive fallbacks recipe]{@link https://developers.google.com/web/tools/workbox/guides/advanced-recipes#comprehensive_fallbacks}. Be sure to include the fallbacks in your precache injection\n *\n * @memberof workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.pageFallback] Precache name to match for pag fallbacks. Defaults to offline.html\n * @param {string} [options.imageFallback] Precache name to match for image fallbacks.\n * @param {string} [options.fontFallback] Precache name to match for font fallbacks.\n */\n\nfunction offlineFallback() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const pageFallback = options.pageFallback || 'offline.html';\n  const imageFallback = options.imageFallback || false;\n  const fontFallback = options.fontFallback || false;\n  self.addEventListener('install', event => {\n    const files = [pageFallback];\n\n    if (imageFallback) {\n      files.push(imageFallback);\n    }\n\n    if (fontFallback) {\n      files.push(fontFallback);\n    }\n\n    event.waitUntil(self.caches.open('workbox-offline-fallbacks').then(cache => cache.addAll(files)));\n  });\n\n  const handler = async options => {\n    const dest = options.request.destination;\n    const cache = await self.caches.open('workbox-offline-fallbacks');\n\n    if (dest === 'document') {\n      const match = (await matchPrecache(pageFallback)) || (await cache.match(pageFallback));\n      return match || Response.error();\n    }\n\n    if (dest === 'image' && imageFallback !== false) {\n      const match = (await matchPrecache(imageFallback)) || (await cache.match(imageFallback));\n      return match || Response.error();\n    }\n\n    if (dest === 'font' && fontFallback !== false) {\n      const match = (await matchPrecache(fontFallback)) || (await cache.match(fontFallback));\n      return match || Response.error();\n    }\n\n    return Response.error();\n  };\n\n  setCatchHandler(handler);\n}\n\nexport { offlineFallback };","map":{"version":3,"names":["setCatchHandler","matchPrecache","offlineFallback","options","pageFallback","imageFallback","fontFallback","self","addEventListener","event","files","push","waitUntil","caches","open","then","cache","addAll","handler","dest","request","destination","match","Response","error"],"sources":["C:/Users/Papichulo/Desktop/react-work/node_modules/workbox-recipes/offlineFallback.js"],"sourcesContent":["/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { setCatchHandler } from 'workbox-routing/setCatchHandler.js';\nimport { matchPrecache } from 'workbox-precaching/matchPrecache.js';\nimport './_version.js';\n/**\n * An implementation of the [comprehensive fallbacks recipe]{@link https://developers.google.com/web/tools/workbox/guides/advanced-recipes#comprehensive_fallbacks}. Be sure to include the fallbacks in your precache injection\n *\n * @memberof workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.pageFallback] Precache name to match for pag fallbacks. Defaults to offline.html\n * @param {string} [options.imageFallback] Precache name to match for image fallbacks.\n * @param {string} [options.fontFallback] Precache name to match for font fallbacks.\n */\nfunction offlineFallback(options = {}) {\n    const pageFallback = options.pageFallback || 'offline.html';\n    const imageFallback = options.imageFallback || false;\n    const fontFallback = options.fontFallback || false;\n    self.addEventListener('install', (event) => {\n        const files = [pageFallback];\n        if (imageFallback) {\n            files.push(imageFallback);\n        }\n        if (fontFallback) {\n            files.push(fontFallback);\n        }\n        event.waitUntil(self.caches\n            .open('workbox-offline-fallbacks')\n            .then((cache) => cache.addAll(files)));\n    });\n    const handler = async (options) => {\n        const dest = options.request.destination;\n        const cache = await self.caches.open('workbox-offline-fallbacks');\n        if (dest === 'document') {\n            const match = (await matchPrecache(pageFallback)) ||\n                (await cache.match(pageFallback));\n            return match || Response.error();\n        }\n        if (dest === 'image' && imageFallback !== false) {\n            const match = (await matchPrecache(imageFallback)) ||\n                (await cache.match(imageFallback));\n            return match || Response.error();\n        }\n        if (dest === 'font' && fontFallback !== false) {\n            const match = (await matchPrecache(fontFallback)) ||\n                (await cache.match(fontFallback));\n            return match || Response.error();\n        }\n        return Response.error();\n    };\n    setCatchHandler(handler);\n}\nexport { offlineFallback };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAT,QAAgC,oCAAhC;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,OAAO,eAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,GAAuC;EAAA,IAAdC,OAAc,uEAAJ,EAAI;EACnC,MAAMC,YAAY,GAAGD,OAAO,CAACC,YAAR,IAAwB,cAA7C;EACA,MAAMC,aAAa,GAAGF,OAAO,CAACE,aAAR,IAAyB,KAA/C;EACA,MAAMC,YAAY,GAAGH,OAAO,CAACG,YAAR,IAAwB,KAA7C;EACAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAkCC,KAAD,IAAW;IACxC,MAAMC,KAAK,GAAG,CAACN,YAAD,CAAd;;IACA,IAAIC,aAAJ,EAAmB;MACfK,KAAK,CAACC,IAAN,CAAWN,aAAX;IACH;;IACD,IAAIC,YAAJ,EAAkB;MACdI,KAAK,CAACC,IAAN,CAAWL,YAAX;IACH;;IACDG,KAAK,CAACG,SAAN,CAAgBL,IAAI,CAACM,MAAL,CACXC,IADW,CACN,2BADM,EAEXC,IAFW,CAELC,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaP,KAAb,CAFL,CAAhB;EAGH,CAXD;;EAYA,MAAMQ,OAAO,GAAG,MAAOf,OAAP,IAAmB;IAC/B,MAAMgB,IAAI,GAAGhB,OAAO,CAACiB,OAAR,CAAgBC,WAA7B;IACA,MAAML,KAAK,GAAG,MAAMT,IAAI,CAACM,MAAL,CAAYC,IAAZ,CAAiB,2BAAjB,CAApB;;IACA,IAAIK,IAAI,KAAK,UAAb,EAAyB;MACrB,MAAMG,KAAK,GAAG,CAAC,MAAMrB,aAAa,CAACG,YAAD,CAApB,MACT,MAAMY,KAAK,CAACM,KAAN,CAAYlB,YAAZ,CADG,CAAd;MAEA,OAAOkB,KAAK,IAAIC,QAAQ,CAACC,KAAT,EAAhB;IACH;;IACD,IAAIL,IAAI,KAAK,OAAT,IAAoBd,aAAa,KAAK,KAA1C,EAAiD;MAC7C,MAAMiB,KAAK,GAAG,CAAC,MAAMrB,aAAa,CAACI,aAAD,CAApB,MACT,MAAMW,KAAK,CAACM,KAAN,CAAYjB,aAAZ,CADG,CAAd;MAEA,OAAOiB,KAAK,IAAIC,QAAQ,CAACC,KAAT,EAAhB;IACH;;IACD,IAAIL,IAAI,KAAK,MAAT,IAAmBb,YAAY,KAAK,KAAxC,EAA+C;MAC3C,MAAMgB,KAAK,GAAG,CAAC,MAAMrB,aAAa,CAACK,YAAD,CAApB,MACT,MAAMU,KAAK,CAACM,KAAN,CAAYhB,YAAZ,CADG,CAAd;MAEA,OAAOgB,KAAK,IAAIC,QAAQ,CAACC,KAAT,EAAhB;IACH;;IACD,OAAOD,QAAQ,CAACC,KAAT,EAAP;EACH,CAnBD;;EAoBAxB,eAAe,CAACkB,OAAD,CAAf;AACH;;AACD,SAAShB,eAAT"},"metadata":{},"sourceType":"module"}