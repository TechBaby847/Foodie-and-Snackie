{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof workbox-cacheable-response\n */\n\nclass CacheableResponsePlugin {\n  /**\n   * To construct a new CacheableResponsePlugin instance you must provide at\n   * least one of the `config` properties.\n   *\n   * If both `statuses` and `headers` are specified, then both conditions must\n   * be met for the `Response` to be considered cacheable.\n   *\n   * @param {Object} config\n   * @param {Array<number>} [config.statuses] One or more status codes that a\n   * `Response` can have and be considered cacheable.\n   * @param {Object<string,string>} [config.headers] A mapping of header names\n   * and expected values that a `Response` can have and be considered cacheable.\n   * If multiple headers are provided, only one needs to be present.\n   */\n  constructor(config) {\n    /**\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     * @private\n     */\n    this.cacheWillUpdate = async _ref => {\n      let {\n        response\n      } = _ref;\n\n      if (this._cacheableResponse.isResponseCacheable(response)) {\n        return response;\n      }\n\n      return null;\n    };\n\n    this._cacheableResponse = new CacheableResponse(config);\n  }\n\n}\n\nexport { CacheableResponsePlugin };","map":{"version":3,"names":["CacheableResponse","CacheableResponsePlugin","constructor","config","cacheWillUpdate","response","_cacheableResponse","isResponseCacheable"],"sources":["C:/Users/Papichulo/Desktop/react-work/node_modules/workbox-cacheable-response/CacheableResponsePlugin.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse, } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,iBAAT,QAAmC,wBAAnC;AACA,OAAO,eAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,uBAAN,CAA8B;EAC1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,WAAW,CAACC,MAAD,EAAS;IAChB;AACR;AACA;AACA;AACA;AACA;IACQ,KAAKC,eAAL,GAAuB,cAAwB;MAAA,IAAjB;QAAEC;MAAF,CAAiB;;MAC3C,IAAI,KAAKC,kBAAL,CAAwBC,mBAAxB,CAA4CF,QAA5C,CAAJ,EAA2D;QACvD,OAAOA,QAAP;MACH;;MACD,OAAO,IAAP;IACH,CALD;;IAMA,KAAKC,kBAAL,GAA0B,IAAIN,iBAAJ,CAAsBG,MAAtB,CAA1B;EACH;;AA7ByB;;AA+B9B,SAASF,uBAAT"},"metadata":{},"sourceType":"module"}